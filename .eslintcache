[{"D:\\web\\amazon-clone\\src\\index.js":"1","D:\\web\\amazon-clone\\src\\reducer.js":"2","D:\\web\\amazon-clone\\src\\App.js":"3","D:\\web\\amazon-clone\\src\\StateProvider.js":"4","D:\\web\\amazon-clone\\src\\reportWebVitals.js":"5","D:\\web\\amazon-clone\\src\\Home.js":"6","D:\\web\\amazon-clone\\src\\Checkout.js":"7","D:\\web\\amazon-clone\\src\\Header.js":"8","D:\\web\\amazon-clone\\src\\Product.js":"9","D:\\web\\amazon-clone\\src\\Subtotal.js":"10","D:\\web\\amazon-clone\\src\\CheckoutProduct.js":"11","D:\\web\\amazon-clone\\src\\Login.js":"12","D:\\web\\amazon-clone\\src\\firebase.js":"13","D:\\web\\amazon-clone\\src\\Payment.js":"14","D:\\web\\amazon-clone\\src\\axios.js":"15","D:\\web\\amazon-clone\\src\\Orders.js":"16","D:\\web\\amazon-clone\\src\\Order.js":"17","D:\\web\\amazon-clone\\src\\Footer\\Footer.js":"18"},{"size":690,"mtime":1613869885088,"results":"19","hashOfConfig":"20"},{"size":1608,"mtime":1615108477669,"results":"21","hashOfConfig":"20"},{"size":2396,"mtime":1615182820930,"results":"22","hashOfConfig":"20"},{"size":608,"mtime":1614858144870,"results":"23","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"20"},{"size":2753,"mtime":1615182347156,"results":"25","hashOfConfig":"20"},{"size":1777,"mtime":1614950008010,"results":"26","hashOfConfig":"20"},{"size":2668,"mtime":1615182294014,"results":"27","hashOfConfig":"20"},{"size":1380,"mtime":1614866709949,"results":"28","hashOfConfig":"20"},{"size":1316,"mtime":1614999117334,"results":"29","hashOfConfig":"20"},{"size":1479,"mtime":1615133440470,"results":"30","hashOfConfig":"20"},{"size":2626,"mtime":1614945055567,"results":"31","hashOfConfig":"20"},{"size":580,"mtime":1614943078518,"results":"32","hashOfConfig":"20"},{"size":6641,"mtime":1615125088563,"results":"33","hashOfConfig":"20"},{"size":241,"mtime":1615103310337,"results":"34","hashOfConfig":"20"},{"size":1284,"mtime":1615125093555,"results":"35","hashOfConfig":"20"},{"size":1393,"mtime":1615133335731,"results":"36","hashOfConfig":"20"},{"size":443,"mtime":1615183837526,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"xme5j4",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\web\\amazon-clone\\src\\index.js",[],["83","84"],"D:\\web\\amazon-clone\\src\\reducer.js",[],"D:\\web\\amazon-clone\\src\\App.js",["85","86","87","88"],"D:\\web\\amazon-clone\\src\\StateProvider.js",["89"],"import react,{createContext, useContext,useReducer} from 'react';\r\n\r\n//prepares the data layout\r\nexport const StateContext=createContext();\r\n\r\n\r\n//Wrap our app and provide the data layout\r\nexport const StateProvider=({reducer,initialState,children})=>(\r\n    <StateContext.Provider value={useReducer(reducer,initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n\r\n);\r\n\r\n\r\n//Pull information from the data provider\r\nexport const useStateValue=()=>useContext(StateContext);//biar bisa akses statecontext dari luar()sepertinya ada cara lain yang bisa digunakan, yaitu saat kita tidak simplified code","D:\\web\\amazon-clone\\src\\reportWebVitals.js",[],"D:\\web\\amazon-clone\\src\\Home.js",[],"D:\\web\\amazon-clone\\src\\Checkout.js",["90","91"],"import { PermDeviceInformation } from '@material-ui/icons';\r\nimport React from 'react'\r\nimport './Checkout.css'\r\nimport CheckoutProduct from './CheckoutProduct';\r\nimport { useStateValue } from './StateProvider'\r\nimport Subtotal from './Subtotal.js'\r\n\r\nfunction Checkout() {\r\n    const [{basket,user}, dispatch]=useStateValue();\r\n    return (\r\n        <div className=\"checkout\">\r\n            <div className=\"checkout__left\" >\r\n                 \r\n                <img \r\n                className=\"checkout__ad\"\r\n                src=\"https://images-na.ssl-images-amazon.com/images/G/01/AmazonExports/Fuji/2020/May/Hero/Fuji_TallHero_Computers_1x._CB432469755_.jpg\"\r\n                alt=\"\"/>\r\n                \r\n\r\n                <div >\r\n                    <h3>Hello, {user?.email}</h3>\r\n                    <h2 className=\"checkout__title\"> Your Shopping Basket</h2>\r\n                    {basket.map((item)=>{\r\n                        return (\r\n                            <CheckoutProduct\r\n                            id={item.id}\r\n                            title={item.title}\r\n                            image={item.image}\r\n                            price={item.price}\r\n                            rating={item.rating}/>\r\n                        )\r\n                    })}\r\n                    {/* Checkout Product */}\r\n                    {/* shopping basket */}\r\n                    {/* shopping basket */}\r\n                    {/* shopping basket */}\r\n\r\n                    \r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"checkout__right\">\r\n                <h2>Subtotal ada disini</h2>\r\n                <Subtotal/>\r\n\r\n                \r\n            </div>\r\n\r\n\r\n\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkout\r\n","D:\\web\\amazon-clone\\src\\Header.js",["92","93","94"],"D:\\web\\amazon-clone\\src\\Product.js",["95","96"],"import React from 'react'\r\nimport './Product.css'\r\nimport { useStateValue } from './StateProvider'\r\n\r\n\r\n\r\nfunction Product({id,title, image, price ,rating}) {\r\n    const [{basket},dispatch]=useStateValue();//??KONEK KE USE_REDUCER DI STATE PROVIDER\r\n\r\n\r\n    // console.log(`Ini adalah basetnya`,basket);\r\n    // console.log(`Ini adalah dispatch`,dispatch);\r\n\r\n    const addToBasket=()=>{\r\n        dispatch({\r\n            type:'ADD_TO_BASKET',\r\n            item:{\r\n                id:id,\r\n                title:title,\r\n                image:image,\r\n                price:price,\r\n                rating:rating,\r\n            },\r\n\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"product\">\r\n            <div className=\"product__info\">\r\n                <p>{title}</p>\r\n                <p className=\"product__price\">\r\n                    <small> $  </small>\r\n\r\n                    <strong> {price}  </strong>\r\n                </p>\r\n\r\n                <div className=\"product__rating\">\r\n                    {\r\n                        Array(rating).fill().map((_,i)=>(\r\n                            <p>‚≠ê</p>\r\n                        ))\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n            <img src={image}/>\r\n\r\n            <button onClick={addToBasket}>Add to basket</button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product","D:\\web\\amazon-clone\\src\\Subtotal.js",["97"],"import React from 'react'\r\nimport './Subtotal.css'\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport {useStateValue} from './StateProvider';\r\nimport { getBasketTotal } from './reducer';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nfunction Subtotal() {\r\n    const [{basket},dispatch]=useStateValue();\r\n    const history =useHistory();//give us the browser history\r\n    \r\n    return (\r\n        <div className=\"subtotal\">\r\n            <CurrencyFormat \r\n                renderText={(value)=>(\r\n                    <>\r\n                        <p>\r\n                            Subtotal ({basket.length} items): <strong >{value}</strong>\r\n                        </p>\r\n\r\n                        <small className='subtotal__gift'>\r\n                            <input type='checkbox'/> This order contains gift\r\n                        </small>\r\n                    </>\r\n\r\n                   \r\n                    \r\n                )}\r\n\r\n                decimalScale={2}\r\n                value={getBasketTotal(basket)}\r\n                displayType={\"text\"}\r\n                thousandSeparator={true}\r\n                prefix={\"$\"}\r\n            />\r\n            <button onClick={e=>history.push('./payment')}>Proceed to checkout</button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Subtotal;\r\n","D:\\web\\amazon-clone\\src\\CheckoutProduct.js",["98","99"],"import React from 'react';\r\nimport './CheckoutProduct.css';\r\nimport { useStateValue } from './StateProvider';\r\n\r\n\r\nexport default function CheckoutProduct({id,image,title, price, rating, hidebutton}){\r\n    const [{basket}, dispatch]=useStateValue();\r\n\r\n    const removeFromBasket =()=>{\r\n        dispatch(\r\n            {\r\n                type:'REMOVE_FROM_BASKET',\r\n                id:id,\r\n            }\r\n        )\r\n    }\r\n    return(\r\n        <div className='checkoutProduct'>\r\n            <img className='checkoutProduct__image' src={image}/>\r\n            <div className=\"checkoutProduct__info\">\r\n                <p className=\"checkoutProduct__title\">\r\n                    {title}\r\n                </p>\r\n                <p className=\"checkoutProduct__price\">\r\n                    <small>\r\n                        $\r\n                    </small>\r\n                    <strong>\r\n                        {price}\r\n                    </strong>\r\n\r\n                </p>\r\n                <div className=\"checkoutProduct__rating\">\r\n                    {\r\n                        Array(rating).fill().map(()=>{\r\n                            return <p>‚≠ê</p>\r\n                        })\r\n                    }\r\n                </div>\r\n                {\r\n                    !hidebutton&&(<button  onClick={removeFromBasket}>\r\n                        Remove from basket\r\n                    </button>)\r\n                }\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n","D:\\web\\amazon-clone\\src\\Login.js",["100"],"import React, { useState } from 'react';\r\nimport './Login.css';\r\nimport Amazon from './Amazon.png';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { auth } from './firebase';\r\nfunction Login() {\r\n    const history=useHistory();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const signIn=e=>{\r\n        e.preventDefault();\r\n        //SOME LOGIN FIREBASE CODE\r\n        auth.signInWithEmailAndPassword(email,password)\r\n        .then((auth)=>{\r\n           \r\n            if(auth){\r\n                history.push('/')\r\n            }\r\n        }).catch(error=> alert(error.message))\r\n    }\r\n\r\n    const register=e=>{\r\n        e.preventDefault();\r\n        //SOME REGISTER FIREBASE CODE\r\n        //email dan password dipassing dari state kita\r\n        auth.createUserWithEmailAndPassword(email,password)\r\n        .then((auth)=>{\r\n           \r\n            if(auth){\r\n                history.push('/')\r\n            }\r\n        }).catch(error=> alert(error.message))\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <Link to='/'>\r\n                <img \r\n                    className=\"login__logo\"\r\n                    src={Amazon}\r\n                />\r\n            </Link>\r\n            <div className='login__container'>\r\n                <h1>Sign-in</h1>\r\n\r\n                <form>\r\n                    <h5>E-mail</h5>\r\n                    <input\r\n                    type=\"text\"\r\n                    value={email}\r\n                    onChange={e=>setEmail(e.target.value)}\r\n                    />\r\n\r\n                    <h5>Password</h5>\r\n                    <input \r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={e=>setPassword(e.target.value)}\r\n\r\n                    />\r\n\r\n                    <button \r\n                    type='submit'\r\n                    className='login__signInButton'\r\n                    onClick={signIn}\r\n                    >\r\n                        Sign In\r\n                    </button>\r\n                </form>\r\n                <p>\r\n                    By sign-In you are agree to the Amazon clone terms and conditions\r\n                    of use and sale. please see our privacy and cookies notice and \r\n                    our interest-based ads notice.\r\n                </p>\r\n\r\n                <button \r\n                className='login__registerButton'\r\n                onClick={register}\r\n                >\r\n                    Create your account\r\n                </button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","D:\\web\\amazon-clone\\src\\firebase.js",[],"D:\\web\\amazon-clone\\src\\Payment.js",["101"],"import { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\r\nimport React, { useEffect, useState } from 'react'\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport CheckoutProduct from './CheckoutProduct';\r\nimport './Payment.css'\r\nimport { getBasketTotal } from './reducer';\r\nimport { useStateValue } from './StateProvider';\r\nimport axios from './axios';\r\nimport {db} from './firebase'\r\n\r\nfunction Payment() {\r\n    const [{basket,user},dispatch]=useStateValue();\r\n\r\n    const history=useHistory();\r\n    const stripe=useStripe();\r\n    const Elements=useElements();\r\n\r\n    const [succeeded, setSucceeded] = useState(false);\r\n    const [processing, setProcessing] = useState(\"\")\r\n    const [error, setError] = useState(null);\r\n    const [disabled, setDisabled] = useState(true);\r\n    const [clientSecret, setClientSecret] = useState(true);\r\n\r\n    useEffect(() => {\r\n        //Generate the special stripe secret which allow us charge the customer\r\n\r\n        const getClientSecret= async ()=>{\r\n            const response= await axios({\r\n                method: 'post',\r\n                //Stripe expects the total in a currencies Subunits\r\n                url: `/payments/create?total=${getBasketTotal(basket)*100}`\r\n            })\r\n            setClientSecret(response.data.clientSecret)\r\n        }\r\n        getClientSecret();\r\n        // return () => {\r\n            \r\n        // }\r\n    }, [basket])\r\n    console.log('The secret is >>>', clientSecret);\r\n    const handleSubmit=async (event)=>{\r\n        //do all the fancy stripeae stuff\r\n        event.preventDefault();\r\n        setProcessing(true)\r\n        \r\n        const payload = await stripe.confirmCardPayment(clientSecret,{//how stripe knows how much we are gonna charge\r\n            payment_method:{\r\n                card:Elements.getElement(CardElement),\r\n            }\r\n        }).then(({paymentIntent})=>{\r\n            db\r\n                .collection('users')\r\n                .doc(user?.uid)\r\n                .collection('orders')\r\n                .doc(paymentIntent.id)\r\n                .set({\r\n                    basket:basket,\r\n                    amount: paymentIntent.amount,\r\n                    created:paymentIntent.created\r\n                    //semua key disini adalah key dan value baru yang kita push ke firestore\r\n                })\r\n            setSucceeded(true);\r\n            setError(null);\r\n            setProcessing(false);\r\n\r\n            dispatch({\r\n                type: 'EMPTY_BASKET'\r\n            })\r\n\r\n            history.replace('/orders')\r\n        })\r\n        //paymentIntent ==payment confirmation\r\n    }\r\n\r\n    const handleChange=(event)=>{\r\n        //Listen  for changes in the CardElement\r\n        // and display any errors as the customer type their card details\r\n        setDisabled(event.empty);\r\n        setError(event.error? event.error.message: \"\");\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"payment\">\r\n            <div className=\"payment__container\">\r\n                <h1>Checkout (<Link to =\"/checkout\">{basket?.length} items</Link>)</h1>\r\n\r\n                {/* Payment section - Delivery Address */}\r\n                <div className=\"payment__section\">\r\n                    <div className=\"payment__title\">\r\n                        <h3>Delivery Address</h3>\r\n                    </div>\r\n                    <div className=\"payment__address\">\r\n                        <p>{user?.email}</p>\r\n                        <p>Sendangrejo street</p>\r\n                        <p>Bojonegoro, Indonesia</p>\r\n                        \r\n                    </div>\r\n\r\n                </div>\r\n                {/* Payment section - Review items */}\r\n                <div className=\"payment__section\">\r\n                    <div className=\"payment__title\">\r\n                        <h3>Review items and Delivery</h3>\r\n\r\n                        <div className=\"payment__items\">\r\n                            <h3>Delivery Address</h3>\r\n                            {basket?.map(item=>(\r\n                                <CheckoutProduct\r\n                                id={item.id}\r\n                                title={item.title}\r\n                                image={item.image}\r\n                                price={item.price}\r\n                                rating={item.rating}/>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    \r\n\r\n                </div>\r\n                {/* Paymentsection - Payment method */}\r\n                <div className=\"payment__section\">\r\n                    <div className=\"payment__title\">\r\n                        <h3>Payment Method</h3>\r\n\r\n                        <div className=\"payment__details\">\r\n                            \r\n                            {/* Stripe will take place */}\r\n                            <form onSubmit={handleSubmit}>\r\n                                <CardElement onChange={handleChange}/>\r\n                                \r\n                                <div className='payment__priceContainer'>\r\n                                    <CurrencyFormat \r\n                                        renderText={(value)=>(\r\n                                        <>\r\n                                            <h3>Order Total {value}</h3>\r\n                                        </>                        \r\n                                        )}\r\n\r\n                                        decimalScale={2}\r\n                                        value={getBasketTotal(basket)}\r\n                                        displayType={\"text\"}\r\n                                        thousandSeparator={true}\r\n                                        prefix={\"$\"}\r\n                                    />\r\n                                    <button disabled={processing || disabled || succeeded}>\r\n                                            <span>\r\n                                            {processing ? <p>processing </p>:\"buy now\"}\r\n                                            </span>\r\n                                    </button>\r\n                                    {/* misal error  */}\r\n                                <div>\r\n                                            \r\n                                </div >\r\n                                        {error&&<div>{error}</div>}\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Payment\r\n","D:\\web\\amazon-clone\\src\\axios.js",[],"D:\\web\\amazon-clone\\src\\Orders.js",["102","103"],"import React, { useEffect, useState } from 'react'\r\nimport { db } from './firebase';\r\nimport Order from './Order';\r\nimport './Orders.css'\r\nimport { useStateValue } from './StateProvider'\r\nimport './Orders.css';\r\nfunction Orders() {\r\n    const [{basket,user}, dispatch]=useStateValue();\r\n    const [orders, setOrders] = useState([]);\r\n    useEffect(() => {\r\n        if(user){\r\n            db\r\n                .collection('users')\r\n                .doc(user?.uid)\r\n                .collection('orders')\r\n                .onSnapshot(snapshot=>(\r\n                    setOrders(\r\n                        snapshot.docs.map(doc=>({\r\n                            id:doc.id,\r\n                            data:doc.data()\r\n                        }))\r\n                    )\r\n                ))\r\n        }else{\r\n            setOrders([])\r\n        }\r\n        return () => {\r\n            \r\n        }\r\n    }, [user])\r\n\r\n    return (\r\n        <div className=\"orders\">\r\n            <h1>Your Orders</h1>   \r\n            <div className=\"orders__order\">\r\n                {\r\n                    orders?.map(order=>(\r\n                        <Order order={order}/>\r\n                    ))\r\n                }         \r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Orders\r\n","D:\\web\\amazon-clone\\src\\Order.js",[],"D:\\web\\amazon-clone\\src\\Footer\\Footer.js",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":1,"column":8,"nodeType":"110","messageId":"111","endLine":1,"endColumn":13},{"ruleId":"108","severity":1,"message":"112","line":5,"column":8,"nodeType":"110","messageId":"111","endLine":5,"endColumn":15},{"ruleId":"108","severity":1,"message":"113","line":21,"column":11,"nodeType":"110","messageId":"111","endLine":21,"endColumn":17},{"ruleId":"114","severity":1,"message":"115","line":47,"column":6,"nodeType":"116","endLine":47,"endColumn":8,"suggestions":"117"},{"ruleId":"108","severity":1,"message":"109","line":1,"column":8,"nodeType":"110","messageId":"111","endLine":1,"endColumn":13},{"ruleId":"108","severity":1,"message":"118","line":1,"column":10,"nodeType":"110","messageId":"111","endLine":1,"endColumn":31},{"ruleId":"108","severity":1,"message":"119","line":9,"column":27,"nodeType":"110","messageId":"111","endLine":9,"endColumn":35},{"ruleId":"108","severity":1,"message":"120","line":7,"column":10,"nodeType":"110","messageId":"111","endLine":7,"endColumn":29},{"ruleId":"108","severity":1,"message":"119","line":14,"column":26,"nodeType":"110","messageId":"111","endLine":14,"endColumn":34},{"ruleId":"121","severity":1,"message":"122","line":24,"column":17,"nodeType":"123","endLine":25,"endColumn":32},{"ruleId":"108","severity":1,"message":"113","line":8,"column":13,"nodeType":"110","messageId":"111","endLine":8,"endColumn":19},{"ruleId":"121","severity":1,"message":"122","line":50,"column":13,"nodeType":"123","endLine":50,"endColumn":31},{"ruleId":"108","severity":1,"message":"119","line":11,"column":21,"nodeType":"110","messageId":"111","endLine":11,"endColumn":29},{"ruleId":"108","severity":1,"message":"113","line":7,"column":13,"nodeType":"110","messageId":"111","endLine":7,"endColumn":19},{"ruleId":"121","severity":1,"message":"122","line":19,"column":13,"nodeType":"123","endLine":19,"endColumn":66},{"ruleId":"121","severity":1,"message":"122","line":40,"column":17,"nodeType":"123","endLine":43,"endColumn":19},{"ruleId":"108","severity":1,"message":"124","line":47,"column":15,"nodeType":"110","messageId":"111","endLine":47,"endColumn":22},{"ruleId":"108","severity":1,"message":"113","line":8,"column":13,"nodeType":"110","messageId":"111","endLine":8,"endColumn":19},{"ruleId":"108","severity":1,"message":"119","line":8,"column":27,"nodeType":"110","messageId":"111","endLine":8,"endColumn":35},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","'Product' is defined but never used.","'basket' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["127"],"'PermDeviceInformation' is defined but never used.","'dispatch' is assigned a value but never used.","'LinkedCameraRounded' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'payload' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},"Update the dependencies array to be: [dispatch]",{"range":"130","text":"131"},[1284,1286],"[dispatch]"]